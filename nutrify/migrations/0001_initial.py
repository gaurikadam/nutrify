# Generated by Django 3.0.7 on 2020-10-22 05:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('companyname', models.CharField(max_length=1000)),
                ('address', models.CharField(max_length=1000)),
                ('about', models.CharField(max_length=1000)),
                ('date_of_establishment', models.DateTimeField()),
                ('location', models.CharField(max_length=100)),
                ('areas_to_focus', models.CharField(choices=[('AREA1', 'AREA 1'), ('AREA2', 'AREA 2'), ('AREA3', 'AREA 3'), ('AREA4', 'AREA 4')], default=None, max_length=100)),
                ('types_of_market_access', models.CharField(choices=[('TYPE1', 'TYPE 1'), ('TYPE2', 'TYPE 2'), ('TYPE3', 'TYPE 3'), ('TYPE4', 'TYPE 4')], default=None, max_length=100)),
                ('credits_assigned', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyIndividualMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Company Individual Memberships',
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('recent_job_title', models.CharField(max_length=100, verbose_name='Recent Job Title')),
                ('employment_type', models.CharField(choices=[('TYPE1', 'TYPE 1'), ('TYPE2', 'TYPE 2'), ('TYPE3', 'TYPE 3'), ('TYPE4', 'TYPE 4')], default='UD', max_length=100, verbose_name='Employment Type')),
                ('industry', models.CharField(choices=[('INDUSTRY1', 'INDUSTRY 1'), ('INDUSTRY2', 'INDUSTRY 2'), ('INDUSTRY3', 'INDUSTRY 3'), ('INDUSTRY4', 'INDUSTRY 4')], default='UD', max_length=100, verbose_name='Industry')),
                ('profile_image', models.ImageField(upload_to='individual_profile_image', verbose_name='Profile Image')),
            ],
            options={
                'verbose_name_plural': 'Individuals',
            },
        ),
        migrations.CreateModel(
            name='InvitebySupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Invites by Supplier',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('productName', models.CharField(max_length=100, verbose_name='Product Name')),
            ],
            options={
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('category', models.CharField(choices=[('CATEGORY1', 'CATEGORY 1'), ('CATEGORY2', 'CATEGORY 2'), ('CATEGORY3', 'CATEGORY 3'), ('CATEGORY4', 'CATEGORY 4')], default='UD', max_length=100, verbose_name='Category')),
                ('factory_certificate_image', models.ImageField(upload_to='supplier_media', verbose_name='Factory certificate image')),
                ('lab_certificate_image', models.ImageField(upload_to='supplier_media', verbose_name='Lab certificate image')),
                ('factory_equipments', models.CharField(max_length=1000, verbose_name='Factory equipments')),
                ('lab_equipments', models.CharField(max_length=1000, verbose_name='Lab equipments')),
                ('formats_of_dosage', models.CharField(max_length=1000, verbose_name='Formats of dosage')),
                ('capacity_of_each_facility', models.CharField(max_length=1000, verbose_name='Capacity of each facility')),
                ('f_d_services', models.CharField(max_length=1000, verbose_name='F & D Services')),
                ('address', models.CharField(max_length=1000, verbose_name='Address')),
                ('is_certified_factory', models.BooleanField(verbose_name='Is certified factory?')),
                ('has_certified_labs', models.BooleanField(verbose_name='Has certified labs?')),
            ],
            options={
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000, verbose_name='Name')),
                ('types', models.CharField(choices=[('TYPE1', 'TYPE 1'), ('TYPE2', 'TYPE 2'), ('TYPE3', 'TYPE 3'), ('TYPE4', 'TYPE 4')], default='UD', max_length=100, verbose_name='Type')),
                ('description', models.CharField(max_length=1000, verbose_name='Description')),
                ('time_to_allot', models.IntegerField(verbose_name='Time to allot for this task')),
                ('slots_available', models.IntegerField(verbose_name='Slots available')),
                ('is_open', models.BooleanField(verbose_name='Is open?')),
                ('is_closed', models.BooleanField(verbose_name='Is closed?')),
                ('is_paused', models.BooleanField(verbose_name='Is paused?')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Company')),
            ],
            options={
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('orderId', models.CharField(max_length=14, unique=True, verbose_name='OrderID')),
                ('orderAmount', models.FloatField(verbose_name='OrderAmount')),
                ('referenceId', models.IntegerField(null=True, unique=True, verbose_name='ReferenceID')),
                ('transactionStatus', models.CharField(max_length=255, verbose_name='transactionStatus')),
                ('transactionMsg', models.CharField(max_length=255, verbose_name='transactionMsg')),
                ('paymentMode', models.CharField(max_length=255, null=True, verbose_name='payment')),
                ('signature', models.CharField(max_length=255, verbose_name='signature')),
                ('transactionTime', models.DateTimeField(verbose_name='transactionTime')),
            ],
            options={
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='TaskMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('companyIndividualMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.CompanyIndividualMembership')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Task')),
            ],
            options={
                'verbose_name_plural': 'Task Memberships',
            },
        ),
        migrations.CreateModel(
            name='SupplierIndivudualRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inviteFrom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Individual')),
                ('inviteTo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Supplier')),
            ],
            options={
                'verbose_name_plural': 'Supplier Indivudual Requests',
            },
        ),
        migrations.CreateModel(
            name='SupplierIndividualMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invitebySupplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nutrify.InvitebySupplier')),
                ('supplierIndivudualRequest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nutrify.SupplierIndivudualRequest')),
            ],
            options={
                'verbose_name_plural': 'Supplier Individual Memberships',
            },
        ),
        migrations.CreateModel(
            name='SupplierAnalytics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Timestamp')),
                ('shortlisted_count', models.IntegerField(verbose_name='Shortlisted count')),
                ('bookmarked_count', models.IntegerField(verbose_name='Bookmarked count')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Supplier')),
            ],
            options={
                'verbose_name_plural': 'Supplier Analytics',
            },
        ),
        migrations.CreateModel(
            name='SearchbySupplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_saved_search', models.BooleanField(verbose_name='Is saved search?')),
                ('supplierIndividualMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.SupplierIndividualMembership')),
            ],
            options={
                'verbose_name_plural': 'Searches',
            },
        ),
        migrations.CreateModel(
            name='SearchbyCompany',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('taskMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.TaskMembership')),
            ],
            options={
                'verbose_name_plural': 'Searches by company',
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=100, verbose_name='Message')),
                ('is_read', models.BooleanField(verbose_name='Is read?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.AddField(
            model_name='invitebysupplier',
            name='inviteFrom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Supplier'),
        ),
        migrations.AddField(
            model_name='invitebysupplier',
            name='inviteTo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Individual'),
        ),
        migrations.CreateModel(
            name='InvitebyComapany',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inviteFrom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Company')),
                ('inviteTo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Individual')),
            ],
            options={
                'verbose_name_plural': 'Company Invites',
            },
        ),
        migrations.CreateModel(
            name='ConnectionRequestsbySupplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Blocked', 'Blocked'), ('Closed', 'Closed')], default='UD', max_length=100, verbose_name='Status')),
                ('supplierIndividualMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.SupplierIndividualMembership')),
                ('taskMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.TaskMembership')),
            ],
            options={
                'verbose_name_plural': 'Connection Requests by Suppliers',
            },
        ),
        migrations.CreateModel(
            name='ConnectionRequestbyCompany',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Bookmarked', 'Bookmarked'), ('Shortlisted', 'Shortlisted'), ('Blocked', 'Blocked')], default='UD', max_length=100, verbose_name='Category')),
                ('supplierIndividualMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.SupplierIndividualMembership')),
                ('taskMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.TaskMembership')),
            ],
            options={
                'verbose_name_plural': 'Connection Requests by company',
            },
        ),
        migrations.CreateModel(
            name='ConnectionQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timeStamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('supplierIndividualMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.SupplierIndividualMembership')),
                ('taskMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.TaskMembership')),
            ],
            options={
                'verbose_name_plural': 'Connections Queue',
            },
        ),
        migrations.CreateModel(
            name='ConnectionLead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supplierIndividualMembership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.SupplierIndividualMembership')),
                ('task_membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.TaskMembership')),
            ],
            options={
                'verbose_name_plural': 'ConnectionLeads',
            },
        ),
        migrations.CreateModel(
            name='CompanyIndividualRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inviteFrom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Individual')),
                ('inviteTo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Company')),
            ],
            options={
                'verbose_name_plural': 'Company Individual Requests',
            },
        ),
        migrations.AddField(
            model_name='companyindividualmembership',
            name='invitebyComapany',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nutrify.InvitebyComapany'),
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('transactionDetails', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='nutrify.Transaction')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('productName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrify.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Orders',
            },
        ),
    ]
